# The base path of dex and the external name of the OpenID Connect service.
# This is the canonical URL that all clients MUST use to refer to dex. If a
# path is provided, dex's HTTP service will listen at a non-root URL.
issuer: http://127.0.0.1:5556/dex

# The storage configuration determines where dex stores its state. Supported
# options include SQL flavors and Kubernetes third party resources.
#
# See the storage document at Documentation/storage.md for further information.
storage:
  type: sqlite3
  config:
    file: examples/dex.db

oauth2:
  skipApprovalScreen: true

# Configuration for the HTTP endpoints.
web:
  http: 127.0.0.1:5556

# Configuration for telemetry
telemetry:
  http: 127.0.0.1:5558

# Uncomment this block to enable configuration for the expiration time durations.
# expiry:
#   signingKeys: "6h"
#   idTokens: "24h"

# Options for controlling the logger.
# logger:
#   level: "debug"
#   format: "text" # can also be "json"

# Uncomment this block to control which response types dex supports. For example
# the following response types enable the implicit flow for web-only clients.
# Defaults to ["code"], the code flow.
# oauth2:
#   responseTypes: ["code", "token", "id_token"]

# Instead of reading from an external storage, use this list of clients.
# If this option isn't chosen clients may be added through the gRPC API.
staticClients:
- id: example-app
  redirectURIs:
  - 'https://oauthdebugger.com/debug'
  - 'https://oidcdebugger.com/debug'
  - 'http://localhost:3000/login/generic_oauth'
  - 'http://localhost:8000/hub/oauth_callback'
  name: 'Example App'
  secret: ZXhhbXBsZS1hcHAtc2VjcmV0

connectors:
- type: txn2
  id: txn2
  name: TXN2
  config:
    authService: http://api-auth:8080

# Let dex keep a list of passwords which can be used to login to dex.
enablePasswordDB: false
